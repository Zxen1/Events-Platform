name: Auto Merge & Backup

on:
  push:
    branches:
      - main

permissions:
  contents: write   # allow pushing backups to the repo

jobs:
  merge-and-backup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "codex-bot"
          git config user.email "codex-bot@example.com"

      # ‚¨áÔ∏è CHANGED: now backs up *all root files* instead of just index.html
      - name: Backup all root files
        run: |
          set -e
          mkdir -p backups
          export TZ="Australia/Sydney"
          datetime=$(date +"%Y-%m-%dT%H%M%S.%3N")

          # Get the commit message
          msg="${{ github.event.head_commit.message }}"

          # Extract description
          desc="$(printf "%s" "$msg" | sed -n '2,$p' | sed -n '/./{p;q}')"
          if [ -z "$desc" ]; then
            desc="$(printf "%s" "$msg" | head -n 1)"
          fi
          safe_desc="$(printf "%s" "$desc" | tr ' ' '-' | tr -cd '[:alnum:]-')"

          # ‚¨áÔ∏è This line copies ALL root-level files (not folders) into a timestamped folder
          mkdir -p "backups/root-${datetime}-${safe_desc}"
          find . -maxdepth 1 -type f ! -path "./.git*" -exec cp {} "backups/root-${datetime}-${safe_desc}/" \;

          echo "üì¶ Backup saved: backups/root-${datetime}-${safe_desc}/"

      - name: Commit backup
        run: |
          git add backups/
          if git diff --cached --quiet; then
            echo "No new backup created"
          else
            git commit -m "Backup all root files at $(date) for commit: ${{ github.sha }}"
            git push origin main
          fi
